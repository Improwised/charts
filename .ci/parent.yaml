resource_types:
- {name: slack-alert,   type: registry-image, source: {repository: arbourd/concourse-slack-alert-resource}}
- {name: pull-request,  type: docker-image,   source: {repository: teliaoss/github-pr-resource}}

resources:
  - name: master
    type: git
    icon: github
    check_every: 1m
    source:
      brnach: master
      uri: https://github.com/Improwised/charts.git

  - name: pipeline-change
    type: git
    icon: pipe
    check_every: 1m
    source:
      uri: https://github.com/Improwised/charts.git
      paths: [.ci]
      brnach: master

  - name: gh-pages
    type: git
    icon: github
    source:
      brnach: gh-pages
      uri: https://github.com/Improwised/charts.git

  - name: kind-v1-20-2
    type: docker-image
    icon: docker
    source:
      repository: kindest/node
      tag: v1.20.2

  - name: kind-v1-19-7
    type: docker-image
    icon: docker
    source:
      repository: kindest/node
      tag: v1.19.7

  - {name: pull-request , type: pull-request , icon: source-pull,  check_every: 2m , webhook_token: thisisjusttest ,
    source: {
      repository: pratikbalar/pratik-concourse ,
      access_token: xxx}}
  - {name: notify , type: slack-alert, icon: slack ,
    source: { ## my test webhook
      url: https://hooks.slack.com/services/xx/xx/xx}}

jobs:
  - name: configure-pipelines
    serial_groups: [master,pull-request]
    on_success: {put: notify, params: {message: Configure pipeline workflow, alert_type: success}}
    on_failure: {put: notify, params: {message: Configure pipeline workflow, alert_type: failed }}
    on_error:   {put: notify, params: {message: Configure pipeline workflow, alert_type: errored}}
    on_abort:   {put: notify, params: {message: Configure pipeline workflow, alert_type: aborted}}
    plan:
    - get: pipeline-change
      trigger: true
      params: { depth: 1 }
    - set_pipeline: self
      file: pipeline-change/.ci/parent.yaml

  - name: pr-workflow
    serial_groups: [pull-request]
    on_success: {put: notify , params: {message: PR Workflow, alert_type: success}}
    on_failure: {put: notify , params: {message: PR Workflow, alert_type: failed }}
    on_error:   {put: notify , params: {message: PR Workflow, alert_type: errored}}
    on_abort:   {put: notify , params: {message: PR Workflow, alert_type: aborted}}
    plan:
    - get: pull-request
      trigger: true
      version: every
    - {put: pull-request, params: { path: pull-request, status: pending}}
    - task: linting
      file: pull-request/.ci/task-lint.yaml
      input_mapping: {repo: pull-request}
      on_failure: {put: pull-request,params: {path: pull-request ,status: failure }}
    - {put: pull-request, params: { path: pull-request, status: success}}

  - name: master-workflow
    serial_groups: [master]
    on_success: {put: notify , params: {message: Master workflow, alert_type: success}}
    on_failure: {put: notify , params: {message: Master workflow, alert_type: failed }}
    on_error:   {put: notify , params: {message: Master workflow, alert_type: errored}}
    on_abort:   {put: notify , params: {message: Master workflow, alert_type: aborted}}
    plan:
    - in_parallel:
      - get: master
        trigger: true
        params: { depth: 1 }
      - get: kind-v1-20-2
        params: {save: true}
      - get: gh-pages
    - in_parallel:
        limit: 2
        steps:
        - task: linting
          file: master/.ci/task-lint.yaml
          input_mapping: {repo: master}
        - task: test-on-v1-19-7
          file: master/.ci/task-test.yaml
          input_mapping: {repo: master}
          params:
            KIND_NODE_VERSION: v1.19.7
            # OTHER_STEPS:
        - task: test-on-v1-20-2
          file: master/.ci/task-test.yaml
          input_mapping: {repo: master, kind-img: kind-v1-20-2}
          params:
            CT_INSTALL_HELM_EXTRA_ARGS: "--timeout 1000"
            OTHER_STEPS: |
              export HELM_CONFIG_HOME=./
              helm repo add k8s-at-home 'https://k8s-at-home.com/charts/
              helm repo update
    - task: packaging
      file: master/.ci/task-release.yaml
      input_mapping: {repo: master, charts: gh-pages}
      output_mapping: {charts: charts}
    - put: gh-pages
      params:
        repository: charts
