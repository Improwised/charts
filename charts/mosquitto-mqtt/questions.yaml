# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

                                - variable: env
                                  group: "App Configuration"
                                  label: "Image Environment"
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: PAPERLESS_ADMIN_USER
                                        label: "PAPERLESS_ADMIN_USER (First Install Only)"
                                        schema:
                                          type: string
                                          required: true
                                          default: ""
                                      - variable: PAPERLESS_ADMIN_PASSWORD
                                        label: "PAPERLESS_ADMIN_PASSWORD (First Install Only)"
                                        schema:
                                          type: string
                                          required: true
                                          private: true
                                          default: ""
                                      - variable: PAPERLESS_ADMIN_MAIL
                                        label: "PAPERLESS_ADMIN_MAIL (First Install Only)"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: PAPERLESS_URL
                                        label: "PAPERLESS_URL"
                                        description: "This is required if you will be exposing Paperless-ngx on a public domain."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: PAPERLESS_WEBSERVER_WORKERS
                                        label: "PAPERLESS_WEBSERVER_WORKERS"
                                        description: "The number of worker processes the webserver should spawn."
                                        schema:
                                          type: int
                                          required: true
                                          default: 2
# Include{containerBasic}
# Include{containerAdvanced}

  - variable: auth
    group: "App Configuration"
    label: "Authentication"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: enabled
          label: "enabled"
          description: "By enabling this, `allow_anonymous` gets set to `false` in the mosquitto config."
          schema:
            type: boolean
            default: false
  - variable: websockets
    group: "App Configuration"
    label: "Web Sockets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: enabled
          label: "enabled"
          description: "By enabling this, an additional listener with protocol websockets is added in the mosquitto config."
          schema:
            type: boolean
            default: false
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
# Include{serviceMain}
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 1883
                              required: true
        - variable: websockets
          label: "WebSockets Service"
          description: "WebSockets Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorClusterIP}
# Include{serviceSelectorExtras}
                    - variable: websockets
                      label: "WebSockets Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 9001
                              required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: "App Data Storage"
          description: "Stores the Application Data."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: configinc
          label: "App config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
        - variable: websockets
          label: "WebSockets Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID this App of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
